{"version":3,"sources":["components/navBar/NavBarLogo.png","components/CartWidget/cartIcon.svg","components/CartContext/CartContext.js","components/CartWidget/CartWidget.js","components/navBar/NavBar.js","components/Item/Item.js","components/ItemList/ItemList.js","components/ItemListContainer/ItemListContainer.js","components/ItemCount/ItemCount.js","components/ItemDetail/ItemDetail.js","firebase/firebase.js","components/ItemDetailContainer/ItemDetailContainer.js","components/CartItem/CartItem.js","components/Cart/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","React","createContext","CartProvider","children","useState","cart","setCart","quantity","setQuantity","total","setTotal","useEffect","t","map","p","price","amount","cartQuantity","length","Provider","value","addToCart","products","counter","id","image","undefined","find","isInCart","oldProduct","newQuantity","newProduct","name","cartWithoutOld","filter","cartWithNew","newItem","eliminateFromCart","newCart","clearCart","CartWidget","useContext","className","style","width","src","cartIcon","alt","categories","categoryId","Navbar","to","logo","category","Item","height","title","ItemList","product","ItemListContainer","greeting","items","setItems","useParams","categoryID","ItemCount","item","add","substract","open","setOpen","onClick","addAndOpen","ItemDetail","description","stock","initial","count","setCount","component","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","ItemDetailContainer","fireItem","setFireItem","collection","get","then","result","docs","data","catch","error","resultado","forEach","CartItem","Cart","openPay","setOpenPay","setName","phone","setPhone","email","setEmail","variant","color","noValidate","autoComplete","label","placeholder","onChange","e","target","preventDefault","console","log","orders","order","buyer","date","Timestamp","fromDate","Date","alert","App","fireItems","setFireItems","NavBar","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAe,G,YAAA,IAA0B,wCCA1B,G,MAAA,IAA0B,sC,eCG5BA,EAAcC,IAAMC,gBA8ElBC,MA5Ef,YAAsC,IAAbC,EAAY,EAAZA,SAAY,EAGPC,mBAAS,IAHF,mBAGzBC,EAHyB,KAGnBC,EAHmB,OAICF,mBAAS,GAJV,mBAIzBG,EAJyB,KAIfC,EAJe,OAKLJ,qBALK,mBAKzBK,EALyB,KAKlBC,EALkB,KAoEjC,OA3DAC,qBAAU,WACN,IAAIC,EAAI,EAEOP,EAAKQ,KAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAQD,EAAEE,UAEnCH,KAAK,SAAAC,GAAC,OAAIF,GAAQE,KAEzBJ,EAASE,GAET,IAAMK,EAAeZ,EAAKa,OAE1BV,EAAYS,KACb,CAACZ,IAiDI,cAACN,EAAYoB,SAAb,CAAsBC,MAAQ,CAAEf,OAAME,WAAUE,QAAOY,UAvC/D,SAAmBC,EAAUC,EAASC,EAAIT,EAAMU,GAG5C,GARJ,SAAkBD,GAEd,YAAgBE,IADHrB,EAAKsB,MAAK,SAAAb,GAAC,OAAIA,EAAEU,KAAOA,KAOjCI,CAASJ,GAAI,CAEb,IAAMK,EAAaxB,EAAKsB,MAAK,SAAAb,GAAC,OAAIA,EAAEU,KAAOA,KAErCM,EAAcD,EAAWb,OAASO,EAElCQ,EAAa,CAAEP,GAAIK,EAAWL,GAAIQ,KAAMH,EAAWG,KAAMP,MAAOI,EAAWJ,MAAOV,MAAOc,EAAWd,MAAOC,OAAQc,GAEnHG,EAAiB5B,EAAK6B,QAAO,SAAAZ,GAAQ,OAAIA,EAASE,IAAMA,KAExDW,EAAW,sBAAOF,GAAP,CAAuBF,IAExCzB,EAAQ6B,OACL,CAEH,IAAMC,EAAU,CAAEZ,GAAIA,EAAIQ,KAAMV,EAAUG,MAAOA,EAAOV,MAAOA,EAAOC,OAAQO,GAC9EjB,EAAQ,GAAD,mBAAKD,GAAL,CAAW+B,OAoBgDC,kBAhB1E,SAA2Bb,GAEvB,IAAMc,EAAUjC,EAAK6B,QAAO,SAAAZ,GAAQ,OAAIA,EAASE,KAAOA,KAExDlB,EAAQgC,IAYiFC,UAT7F,WAEIjC,EAAQ,IACRE,EAAY,KAMR,SACML,KCtDHqC,MAff,WAAuB,IACbjC,EAAakC,qBAAW1C,GAAxBQ,SAER,OACE,qBAAKmC,UAAU,aAAf,SACGnC,EAAW,GACV,qCACE,qBAAKoC,MAAO,CAAEC,MAAO,IAAMC,IAAKC,EAAUC,IAAI,aAC9C,6BAAKxC,U,OCPTyC,EAAa,CACjB,CACEC,WAAY,UACZjB,KAAM,SAER,CACEiB,WAAY,SACZjB,KAAM,UAER,CACEiB,WAAY,WACZjB,KAAM,aAgCKkB,MA3Bf,WACE,OACE,sBAAKR,UAAU,SAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAMS,GAAI,IAAV,SACE,qBAAKN,IAAKO,EAAML,IAAI,OAAOH,MAAO,UAGtC,sBAAKF,UAAU,OAAf,UACGM,EAAWnC,KAAI,SAACwC,GAAD,OACd,cAAC,IAAD,CAAMF,GAAE,oBAAeE,EAASJ,YAAhC,SACE,4BAAII,EAASrB,YAGjB,yCACA,yCAEA,qBAAKU,UAAU,eAAf,SACE,cAAC,IAAD,CAAMS,GAAI,QAAV,SACE,cAAC,EAAD,eCTGG,MA9Bf,YAAoC,IAApB9B,EAAmB,EAAnBA,GAAIQ,EAAe,EAAfA,KAAMP,EAAS,EAATA,MAIxB,OACE,qBAAKiB,UAAU,OAAf,SACE,gCACE,gCACE,qBACEK,IAAI,MACJQ,OAAO,MACPV,IAAKpB,EACL+B,MAAOxB,IAET,8BACE,6BACGA,SAIP,8BACE,iCACE,cAAC,IAAD,CAAMmB,GAAI,SAAW3B,EAArB,oCCNGiC,MAhBf,YAAiC,IAAbnC,EAAY,EAAZA,SAClB,OACE,qBAAKoB,UAAU,WAAf,SAEGpB,EAAST,KAAI,SAAC6C,GAAD,OACZ,cAAC,EAAD,CAEElC,GAAIkC,EAAQlC,GACZQ,KAAM0B,EAAQ1B,KACdP,MAAOiC,EAAQjC,OAHViC,EAAQlC,U,eCoBRmC,MAzBf,YAAoD,IAAvBC,EAAsB,EAAtBA,SAAUtC,EAAY,EAAZA,SAAY,EAGvBlB,mBAAS,IAHc,mBAG1CyD,EAH0C,KAGnCC,EAHmC,KAKzCtC,EAAOuC,cAAPvC,GAWR,OATAb,qBAAU,WACR,GAAIa,EAAI,CACN,IAAM6B,EAAW/B,EAASY,QAAO,SAACwB,GAAD,OAAaA,EAAQM,aAAexC,KACrEsC,EAAST,QAETS,EAASxC,KAEV,CAACE,EAAIF,IAGN,sBAAKoB,UAAU,oBAAf,UACE,6BAAKkB,IAEJtC,EAASJ,OAAS,EAAI,cAAC,EAAD,CAAUI,SAAUuC,IAAY,6CCyB9CI,MA9Cf,YAAuE,IAAlDC,EAAiD,EAAjDA,KAAM1C,EAA2C,EAA3CA,GAAI2C,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,UAAW7C,EAAuB,EAAvBA,QAAQR,EAAe,EAAfA,MAAOU,EAAQ,EAARA,MAAQ,EAE5CrB,oBAAS,GAFmC,mBAE7DiE,EAF6D,KAEvDC,EAFuD,KAG5DjD,EAAcoB,qBAAW1C,GAAzBsB,UAQR,OACE,sBAAKqB,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQ6B,QAASH,EAAjB,eAGA,6BAAK7C,IACL,wBAASgD,QAASJ,EAAlB,kBAKAE,EAWA,8BACE,cAAC,IAAD,CAAMlB,GAAG,QAAT,SACE,iCACE,0DAbN,qBAAKT,UAAU,qBAAf,SACE,wBACE6B,QAAS,kBApBnB,SAAoBL,EAAM3C,EAASC,EAAGT,EAAMU,GAE1CJ,EAAU6C,EAAM3C,EAASC,EAAGT,EAAOU,GACnC6C,GAAQ,GAiBeE,CAAWN,EAAM3C,EAASC,EAAGT,EAAOU,IADrD,SAGE,oDACqB,eCqClBgD,MAjEf,YASG,EARDP,KAQE,IAPF1C,EAOC,EAPDA,GACAQ,EAMC,EANDA,KACAP,EAKC,EALDA,MACAiD,EAIC,EAJDA,YACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,QACA7D,EACC,EADDA,MACC,EAGyBX,mBAAS,GAHlC,mBAGMyE,EAHN,KAGaC,EAHb,KAoBD,OACE,sBAAKpC,UAAU,aAAf,UACE,8BACE,gCACE,qBACEqC,UAAU,MACVhC,IAAKf,EACLuB,OAAO,MACPV,IAAKpB,EACL+B,MAAOxB,IAET,gCACE,6BAAKA,IACL,+BACG0C,EADH,kBAC+B3D,aAKrC,8BACE,cAAC,EAAD,CACE6D,QAASA,EACTD,MAAOA,EACPR,IApCR,WACMU,EAAQF,GACVG,EAASD,EAAQ,IAmCbT,UA9BR,WACMS,EAAQD,GACVE,EAASD,EAAQ,IA6BbX,KAAMlC,EACNT,QAASsD,EACTrD,GAAIA,EACJT,MAAOA,EACPU,MAAOA,U,QCnDXuD,G,MAAMC,IAASC,cATE,CACpBC,OAAQ,0CACPC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,+CAKEC,EAAYR,IAASQ,UAAUT,GCmC7BU,MA5Cf,WAAgC,IAAD,EACGtF,mBAAS,IADZ,mBACtBuF,EADsB,KACZC,EADY,KAGrBpE,EAAOuC,cAAPvC,GAERb,qBAAU,WACG8E,EAEWI,WAAW,SACRC,MAEtBC,MAAK,SAACC,GACLJ,EAAYI,EAAOC,KAAKpF,KAAI,SAACC,GAAD,oBAAUU,GAAIV,EAAEU,IAAOV,EAAEoF,eAEtDC,OAAM,SAACC,SACT,CAAC5E,IAEJ,IAAI6E,EAAY,GAOhB,OANAV,EAASW,SAAQ,SAAUzC,GACrBA,EAAMrC,KAAOA,IACf6E,EAAYxC,MAKd,qBAAKnB,UAAU,sBAAf,SACGiD,EACC,cAAC,EAAD,CACEzB,KAAMmC,EAAUnC,KAChB1C,GAAI6E,EAAU7E,GACdQ,KAAMqE,EAAUrE,KAChBjB,MAAOsF,EAAUtF,MACjBU,MAAO4E,EAAU5E,MACjBiD,YAAa2B,EAAU3B,YACvBC,MAAO0B,EAAU1B,MACjBC,QAASyB,EAAUzB,UAGrB,4CCTO2B,MA9Bf,YAAuD,IAAnC/E,EAAkC,EAAlCA,GAAIQ,EAA8B,EAA9BA,KAAMP,EAAwB,EAAxBA,MAAOV,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAClCqB,EAAsBI,qBAAW1C,GAAjCsC,kBAGR,OACE,sBAAKK,UAAU,WAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,6BAAKV,MAEP,qBAAKU,UAAU,kBAAf,SACE,qBAAKG,IAAKpB,EAAOsB,IAAKf,MAExB,qBAAKU,UAAU,QAAf,SACE,mCAAM3B,OAER,qBAAK2B,UAAU,SAAf,SACE,6BAAK1B,MAEP,qBAAK0B,UAAU,UAAf,SACE,mCAAM1B,EAASD,OAEjB,wBACEwD,QAAS,kBAAMlC,EAAkBb,IADnC,0BCyFSgF,MA3Gf,WAAgB,MAEqB/D,qBAAW1C,GAAtCM,EAFM,EAENA,KAAMkC,EAFA,EAEAA,UAAW9B,EAFX,EAEWA,MAFX,EAIgBL,oBAAS,GAJzB,mBAIPqG,EAJO,KAIEC,EAJF,OAMUtG,mBAAS,IANnB,mBAMP4B,EANO,KAMD2E,EANC,OAOYvG,mBAAS,IAPrB,mBAOPwG,EAPO,KAOAC,EAPA,OAQYzG,mBAAS,IARrB,mBAQP0G,EARO,KAQAC,EARA,KAgCd,OACE,sBAAKrE,UAAU,OAAf,UACGrC,EAAKa,OAAS,EACb,+CAEA,qCACE,kEACA,cAAC,IAAD,CAAMiC,GAAI,IAAV,SACE,wBAAQoB,QAAShC,EAAWyE,QAAQ,YAAYC,MAAM,UAAtD,0CAON,qBAAKvE,UAAU,YAAf,SACGrC,EAAKa,OAAS,GACbb,EAAKQ,KAAI,SAACgD,GAAD,OACP,cAAC,EAAD,CAEErC,GAAIqC,EAAMrC,GACVQ,KAAM6B,EAAM7B,KACZP,MAAOoC,EAAMpC,MACbV,MAAO8C,EAAM9C,MACbC,OAAQ6C,EAAM7C,QALT6C,EAAMrC,SAUlBnB,EAAKa,OAAS,GACb,qCACE,yCAAYT,KACZ,sBAAKiC,UAAU,qBAAf,UACE,wBAAQ6B,QAAShC,EAAjB,4BACA,wBACEgC,QAAS,WACPmC,GAAW,IAFf,yBAWLD,GACC,uBAAMS,YAAU,EAACC,aAAa,MAA9B,UACE,uBACE3F,GAAG,iBACH4F,MAAM,OACNC,YAAY,oBACZjG,MAAOY,EACPsF,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOpG,UAEpC,uBACEI,GAAG,iBACH4F,MAAM,YACNC,YAAY,sBACZjG,MAAOwF,EACPU,SAAU,SAACC,GAAD,OAAOV,EAASU,EAAEC,OAAOpG,UAErC,uBACEI,GAAG,iBACH4F,MAAM,QACNC,YAAY,mBACZjG,MAAO0F,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAASQ,EAAEC,OAAOpG,UAErC,wBAAQmD,QA1FhB,SAAqBgD,GACnBA,EAAEE,iBACFC,QAAQC,IAAI3F,GACZ,IACM4F,EADKnC,EACOI,WAAW,UAEvBgC,EAAQ,CACZC,MAAO,CAAE9F,KAAMA,EAAM4E,MAAOA,EAAOE,MAAOA,GAC1CjD,MAAOxD,EACP0H,KAAM9C,IAASQ,UAAUuC,UAAUC,SAAS,IAAIC,MAChDzH,MAAOA,GAGTmH,EACGzD,IAAI0D,GACJ9B,MAAK,gBAAGvE,EAAH,EAAGA,GAAH,OAAY2G,MAAM,+BAAD,OAA6B3G,OACnDuE,KAAKxD,GACLwD,KAAKW,GAAW,IAChBP,OAAM,SAACC,GAAD,OAAW+B,MAAM,eAAD,OAAgB/B,QAwEnC,oCCxCKgC,MAxDf,WAAgB,IAAD,EACuBhI,mBAAS,IADhC,mBACLiI,EADK,KACMC,EADN,KAkBb,OAfD3H,qBAAU,WACG8E,EAEWI,WAAW,SACRC,MAEtBC,MAAK,SAACC,GACLsC,EAAatC,EAAOC,KAAKpF,KAAI,SAACC,GAAD,oBAAUU,GAAIV,EAAEU,IAAOV,EAAEoF,eAEvDC,OAAM,SAACC,GACNsB,QAAQC,IAAIvB,QAEf,IAIA,qBAAK1D,UAAU,MAAf,SAEE,cAAC,EAAD,UAEE,eAAC,IAAD,WAEE,cAAC6F,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACE7E,SAAS,yBACTtC,SAAU+G,MAId,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,CACE7E,SAAS,yBACTtC,SAAU+G,MAId,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,iBC9CCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99b80ed0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/NavBarLogo.0decc187.png\";","export default __webpack_public_path__ + \"static/media/cartIcon.c7333b75.svg\";","import React, { useState, useEffect } from 'react'\r\n\r\n// Preparo el contexto\r\nexport const CartContext = React.createContext();\r\n\r\nfunction CartProvider( { children }) {\r\n    // Preparo el estado de mi carrito. Ac√° voy a guardar cada vez que alguien guarde algo nuevo\r\n    \r\n    const [ cart, setCart ] = useState([])\r\n    const [ quantity, setQuantity ] = useState(0)\r\n    const [ total, setTotal ] = useState()\r\n\r\n    \r\n    // Cada vez que se modifique el carrito corro el total nuevamente\r\n    useEffect(() => {\r\n        var t = 0\r\n        // Con el map obtengo el total por producto\r\n        const totals = cart.map( p => p.price * p.amount)\r\n        // Sumo a t el total por producto de cada uno\r\n        totals.map( p => t = t + p)\r\n        // Lo guardo en el estado\r\n        setTotal(t)\r\n        // Calculo la cantidad de productos\r\n        const cartQuantity = cart.length\r\n        // Las guardo en el estado\r\n        setQuantity(cartQuantity)\r\n    }, [cart])\r\n\r\n    // Traigo las funciones para modificar el carrito\r\n\r\n    // Funci√≥n para ver si el producto est√° en el carrito\r\n    function isInCart(id){\r\n        const item = cart.find(p => p.id === id)  \r\n        return item === undefined ? false : true;\r\n    }\r\n\r\n    function addToCart(products, counter, id, price,image) {\r\n        \r\n        // Si el producto est√° en el carrito, le agrego la cantidad, no un producto nuevo\r\n        if (isInCart(id)){\r\n            // Encuentro el producto \r\n            const oldProduct = cart.find(p => p.id === id)\r\n            // Armo la nueva cantidad de productos\r\n            const newQuantity = oldProduct.amount + counter           \r\n            // Armo el nuevo producto cambiandole la cantidad\r\n            const newProduct = { id: oldProduct.id, name: oldProduct.name, image: oldProduct.image, price: oldProduct.price, amount: newQuantity}\r\n            // Elimino el antiguo producto para no tener duplicados\r\n            const cartWithoutOld = cart.filter(products => products.id =! id)\r\n            // Agrego el nuevo producto\r\n            const cartWithNew = [...cartWithoutOld, newProduct]\r\n            // Guardo en el estado el nuevo listado\r\n            setCart(cartWithNew)            \r\n        } else {\r\n            // Guardo en el estado cart el producto que eligi√≥ y la cantidad\r\n            const newItem = { id: id, name: products, image: image, price: price, amount: counter }\r\n            setCart([...cart, newItem]) \r\n        }\r\n    }\r\n\r\n    function eliminateFromCart(id){\r\n        // Elimino el producto por Id filtrando y quedandome con todos los que no tienen el id seleccionado\r\n        const newCart = cart.filter(products => products.id !== id)\r\n        // Guardo el nuevo carrito\r\n        setCart(newCart)\r\n    }\r\n\r\n    function clearCart(){\r\n        // Guardo como estado un array vac√≠o\r\n        setCart([])\r\n        setQuantity(0)\r\n    }\r\n\r\n    // Envuelvo children, que va a ser cualquier componente que le pase, dentro de mi provider\r\n    return (\r\n     \r\n            <CartContext.Provider value ={{ cart, quantity, total, addToCart, eliminateFromCart, clearCart }}>\r\n                { children }\r\n            </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider;\r\n","import \"./CartWidget.css\"\r\nimport cartIcon from \"./cartIcon.svg\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"../CartContext/CartContext\";\r\n\r\n\r\n\r\nfunction CartWidget() {\r\n  const { quantity } = useContext(CartContext);\r\n\r\n  return (\r\n    <div className=\"cartWidget\">\r\n      {quantity > 0 && (\r\n        <>\r\n          <img style={{ width: 30 }} src={cartIcon} alt=\"CartIcon\" />\r\n          <h4>{quantity}</h4>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartWidget;","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport logo from \"./NavBarLogo.png\";\r\nimport CartWidget from \"../CartWidget/CartWidget\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Preparo las categor√≠as para mapearlas en el navbar. El categoryId me va a permitir la navegaci√≥n\r\n// por par√°metros. El nombre lo voy a usar para mostrarlo en pantalla\r\nconst categories = [\r\n  {\r\n    categoryId: \"BULONES\",\r\n    name: \"BULON\",\r\n  },\r\n  {\r\n    categoryId: \"TUERCA\",\r\n    name: \"TUERCA\",\r\n  },\r\n  {\r\n    categoryId: \"ARANDELA\",\r\n    name: \"ARANDELA\",\r\n  },\r\n \r\n];\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className=\"topNav\">\r\n        <Link to={\"/\"}>\r\n          <img src={logo} alt=\"logo\" width={100}></img>\r\n        </Link>\r\n      </div>\r\n      <div className=\"link\">\r\n        {categories.map((category) => (\r\n          <Link to={`/category/${category.categoryId}`}>\r\n            <p>{category.name}</p>\r\n          </Link>\r\n        ))}\r\n        <p>NOSOTROS</p>\r\n        <p>CONTACTO</p>\r\n\r\n        <div className=\"navbar__cart\">\r\n          <Link to={\"/cart\"}>\r\n            <CartWidget />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Item({ id, name, image }) {\r\n \r\n\r\n  // Con los datos que me env√≠a ItemList voy a mostrar el item.\r\n  return (\r\n    <div className=\"item\">\r\n      <div>\r\n        <div>\r\n          <img\r\n            alt=\"img\"\r\n            height=\"300\"\r\n            src={image}\r\n            title={name}\r\n          />\r\n          <div>\r\n            <h3 >\r\n              {name}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button >\r\n            <Link to={\"/item/\" + id}> Conocer Mas</Link>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"../Item/Item\";\r\n\r\n\r\nfunction ItemList({ products }) {\r\n  return (\r\n    <div className=\"itemList\">\r\n\r\n      {products.map((product) => (\r\n        <Item\r\n          key={product.id}\r\n          id={product.id}\r\n          name={product.name}\r\n          image={product.image}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ItemList from \"../ItemList/ItemList\";\r\nimport \"./ItemListContainer.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ItemListContainer({ greeting, products }) {\r\n  \r\n  // Voy a usar este estado para guardar los productos que quiero mostrar, sean filtrados o no\r\n  const [items, setItems] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const category = products.filter((product) => product.categoryID === id);\r\n      setItems(category);\r\n    } else {\r\n      setItems(products);\r\n    }\r\n  }, [id, products]);\r\n\r\n  return (\r\n    <div className=\"itemListContainer\">\r\n      <h2>{greeting}</h2>\r\n    \r\n      {products.length > 0 ? <ItemList products={items} /> : <h2>Loading</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemListContainer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../CartContext/CartContext\";\r\n\r\nfunction ItemCount({ item, id, add, substract, counter,price, image}) {\r\n  \r\n  const [open, setOpen] = useState(false);\r\n  const { addToCart } = useContext(CartContext);\r\n\r\n  // Uno las funciones de agregar al carrito con la de mostrar el \"Terminar compra\"\r\n  function addAndOpen(item, counter, id,price,image) {\r\n   \r\n    addToCart(item, counter, id,price, image);\r\n    setOpen(true);\r\n  }\r\n  return (\r\n    <div className=\"itemCount\">\r\n      <div className=\"itemCount__counter\">\r\n        <button onClick={substract}>\r\n          -\r\n        </button>\r\n        <h3>{counter}</h3>\r\n        <button  onClick={add}>\r\n          +\r\n        </button>\r\n      </div>\r\n      {/* Si open es false, que se muestre Agregar al Carrito, pero si es true, Terminar la compra*/}\r\n      {!open ? (\r\n        <div className=\"itemCount__agregar\">\r\n          <button\r\n            onClick={() => addAndOpen(item, counter, id,price, image)}\r\n          >\r\n            <h3>\r\n              Agregar al carrito{\" \"} \r\n            </h3>\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Link to=\"/cart\">\r\n            <button>\r\n              <h3>Terminar la compra</h3>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemCount;\r\n","import React, { useState } from \"react\";\r\nimport ItemCount from \"../ItemCount/ItemCount\";\r\n\r\n\r\n\r\nfunction ItemDetail({\r\n  item,\r\n  id,\r\n  name,\r\n  image,\r\n  description,\r\n  stock,\r\n  initial,\r\n  price,\r\n}) {\r\n\r\n  // Este estado lo voy a usar para ir chequeando la cantidad de productos\r\n  const [count, setCount] = useState(0);\r\n  //count = initial\r\n  \r\n  // Si el contador es menor que el stock, cuando el usuario hace click agrego 1\r\n  function add() {\r\n    if (count < stock) {\r\n      setCount(count + 1);\r\n    }\r\n  }\r\n  \r\n  // Si el contador es mayor que el inicial, cuando el usuario hace click le resto 1\r\n  function substract() {\r\n    if (count > initial) {\r\n      setCount(count - 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"itemDetail\">\r\n      <div>\r\n        <div>\r\n          <img\r\n            component=\"img\"\r\n            alt={name}\r\n            height=\"300\"\r\n            src={image}\r\n            title={name}\r\n          />\r\n          <div>\r\n            <h3>{name}</h3>\r\n            <h5>\r\n              {description} por tan solo ${price}\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ItemCount\r\n          initial={initial}\r\n          stock={stock}\r\n          add={add}\r\n          substract={substract}\r\n          item={name}\r\n          counter={count}\r\n          id={id}\r\n          price={price}\r\n          image={image}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n   apiKey: \"AIzaSyA4s257LOkcp9QEqKZWpByqwbfCvwnu4iY\",\r\n    authDomain: \"tornillos-a875d.firebaseapp.com\",\r\n    projectId: \"tornillos-a875d\",\r\n    storageBucket: \"tornillos-a875d.appspot.com\",\r\n    messagingSenderId: \"353891088662\",\r\n    appId: \"1:353891088662:web:6406e369f43cd8a9f47837\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore(app);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ItemDetail from \"../ItemDetail/ItemDetail\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { firestore } from \"../../firebase/firebase\";\r\n\r\nfunction ItemDetailContainer() {\r\n  const [fireItem, setFireItem] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const db = firestore;\r\n\r\n    const collection = db.collection(\"items\");\r\n    const query = collection.get();\r\n    query\r\n      .then((result) => {\r\n        setFireItem(result.docs.map((p) => ({ id: p.id, ...p.data() })));\r\n      })\r\n      .catch((error) => {});\r\n  }, [id]);\r\n\r\n  let resultado = [];\r\n  fireItem.forEach(function (items) {\r\n    if (items.id === id) {\r\n      resultado = items;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"itemDetailContainer\">\r\n      {fireItem ? (\r\n        <ItemDetail\r\n          item={resultado.item}\r\n          id={resultado.id}\r\n          name={resultado.name}\r\n          price={resultado.price}\r\n          image={resultado.image}\r\n          description={resultado.description}\r\n          stock={resultado.stock}\r\n          initial={resultado.initial}\r\n        />\r\n      ) : (\r\n        <h2>Loading</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetailContainer;\r\n","import React, { useContext } from \"react\";\r\nimport { CartContext } from \"../CartContext/CartContext\";\r\n\r\n\r\nfunction CartItem({ id, name, image, price, amount }) {\r\n  const { eliminateFromCart } = useContext(CartContext);\r\n  \r\n\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <div className=\"cartItem__title\">\r\n        <h3>{name}</h3>\r\n      </div>\r\n      <div className=\"cartItem__image\">\r\n        <img src={image} alt={name} />\r\n      </div>\r\n      <div className=\"price\">\r\n        <h3>${price}</h3>\r\n      </div>\r\n      <div className=\"amount\">\r\n        <h3>{amount}</h3>\r\n      </div>\r\n      <div className=\"parcial\">\r\n        <h3>${amount * price}</h3>\r\n      </div>\r\n      <button\r\n        onClick={() => eliminateFromCart(id)}\r\n      >\r\n        Eliminar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { CartContext } from \"../CartContext/CartContext\";\r\nimport CartItem from \"../CartItem/CartItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firestore } from \"../../firebase/firebase\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction Cart() {\r\n  // Traigo las funciones de Cart y de ClearCart del contexto\r\n  const { cart, clearCart, total } = useContext(CartContext);\r\n  // Uso este estado para mostrar el formulario\r\n  const [openPay, setOpenPay] = useState(false);\r\n  // Estos estados me van a servir para guardar la informaci√≥n del formulario\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  function submitOrder(e) {\r\n    e.preventDefault();\r\n    console.log(name);\r\n    const db = firestore;\r\n    const orders = db.collection(\"orders\");\r\n\r\n    const order = {\r\n      buyer: { name: name, phone: phone, email: email },\r\n      items: cart,\r\n      date: firebase.firestore.Timestamp.fromDate(new Date()),\r\n      total: total,\r\n    };\r\n\r\n    orders\r\n      .add(order)\r\n      .then(({ id }) => alert(`Anot√° el id de tu compra ${id}`))\r\n      .then(clearCart)\r\n      .then(setOpenPay(false))\r\n      .catch((error) => alert(`no funciona ${error}`));\r\n  }\r\n\r\n  // Rendereo condicional para mostrar los productos o que vaya a comprar\r\n  return (\r\n    <div className=\"cart\">\r\n      {cart.length > 0 ? (\r\n        <h1>Dale, compra!</h1>\r\n      ) : (\r\n        <>\r\n          <h1>A√∫n no elegiste tus productos</h1>\r\n          <Link to={\"/\"}>\r\n            <button onClick={clearCart} variant=\"contained\" color=\"primary\">\r\n              Llevame a los productos\r\n            </button>\r\n          </Link>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"cartItems\">\r\n        {cart.length > 0 &&\r\n          cart.map((items) => (\r\n            <CartItem\r\n              key={items.id}\r\n              id={items.id}\r\n              name={items.name}\r\n              image={items.image}\r\n              price={items.price}\r\n              amount={items.amount}\r\n            />\r\n          ))}\r\n      </div>\r\n\r\n      {cart.length > 0 && (\r\n        <>\r\n          <h2>Total ${total}</h2>\r\n          <div className=\"cartItems__buttons\">\r\n            <button onClick={clearCart}>Vaciar carrito</button>\r\n            <button\r\n              onClick={() => {\r\n                setOpenPay(true);\r\n              }}\r\n            >\r\n              PAGAR\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {openPay && (\r\n        <form noValidate autoComplete=\"off\">\r\n          <input\r\n            id=\"standard-basic\"\r\n            label=\"Name\"\r\n            placeholder=\"Ingrese su nombre\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            id=\"standard-basic\"\r\n            label=\"Telephone\"\r\n            placeholder=\"Ingrese su telefono\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />\r\n          <input\r\n            id=\"standard-basic\"\r\n            label=\"Email\"\r\n            placeholder=\"Ingrese su email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <button onClick={submitOrder}>completar orden</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navBar/NavBar\";\nimport ItemListContainer from \"./components/ItemListContainer/ItemListContainer\";\nimport ItemDetailContainer from \"./components/ItemDetailContainer/ItemDetailContainer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CartProvider from \"./components/CartContext/CartContext\";\nimport Cart from \"./components/Cart/Cart\";\nimport { firestore } from \"./firebase/firebase\";\n\n\nfunction App() {\n  const [ fireItems, setFireItems ] = useState([])\n\n useEffect(() => {\n   const db = firestore;\n   \n   const collection = db.collection(\"items\");\n   const query = collection.get();\n   query\n     .then((result) => {\n       setFireItems(result.docs.map((p) => ({ id: p.id, ...p.data() })));\n     })\n     .catch((error) => {\n       console.log(error);\n     });\n }, []);\n  \n\n  return (\n    <div className=\"app\">\n      {/* Envuelvo toda mi app en mi provider para poder tomar los datos en cualquier componente */}\n      <CartProvider>\n        {/* Toda la app la envuelvo en BrowserRouter */}\n        <BrowserRouter>\n          {/* Navbar la dejo fuera del Switch porque quiero que siempre est√©, sin importar la ruta */}\n          <NavBar/>\n\n          <Switch>\n            <Route exact path=\"/\">\n              <ItemListContainer\n                greeting=\"Tornillos & fijaciones\"\n                products={fireItems}\n              />\n            </Route>\n\n            <Route exact path=\"/category/:id\">\n              <ItemListContainer\n                greeting=\"Tornillos & fijaciones\"\n                products={fireItems}\n              />\n            </Route>\n\n            <Route exact path=\"/item/:id\">\n              <ItemDetailContainer />\n            </Route>\n\n            <Route exact path=\"/cart\">\n              <Cart />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </CartProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}